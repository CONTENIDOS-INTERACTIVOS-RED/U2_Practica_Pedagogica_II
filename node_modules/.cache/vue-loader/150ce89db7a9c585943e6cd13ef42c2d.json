{"remainingRequest":"/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/node_modules/pug-plain-loader/index.js!/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/src/views/curso/Tema1.vue?vue&type=template&id=38a8fe38&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/src/views/curso/Tema1.vue","mtime":1745962736302},{"path":"/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Practica_Pedagogica_II/U2_Practica_Pedagogica_II/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXJzby1tYWluLWNvbnRhaW5lciBwYi0zIn0sW19jKCdCYW5uZXJJbnRlcm5vJyx7YXR0cnM6eyJzdWJUaXR1bG8iOicxLiBQbGFuZWFjaW9uZXMgZGlkw6FjdGljYXMnfX0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29udGFpbmVyIHRhcmpldGEgdGFyamV0YS0tYmxhbmNhIHAtNCBwLW1kLTUgb3ZlcmZsb3ctaGlkZGVuIn0sW192bS5fbSgwKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi00In0sW192bS5fdigiQSB0cmF2w6lzIGRlIGxhIHByw6FjdGljYSBwZWRhZ8OzZ2ljYSwgbG9zIGVzdHVkaWFudGVzIGRlIGxhIGxpY2VuY2lhdHVyYSBlbiBlZHVjYWNpw7NuIGluZmFudGlsLCBwb2Ryw6FuIGFwbGljYXIgZXN0YXMgcGxhbmVhY2lvbmVzIGVuIGNvbnRleHRvcyByZWFsZXMsIGFzZWd1cmFuZG8gcXVlIGxhcyBhY3RpdmlkYWRlcyBzZWFuIGFwcm9waWFkYXMgcGFyYSBlbCBuaXZlbCBkZSBkZXNhcnJvbGxvIGRlIGxvcyBuacOxb3MsIGFkYXB0w6FuZG9sYXMgYSBzdXMgbmVjZXNpZGFkZXMgeSBjb250ZXh0b3MgZXNwZWPDrWZpY29zLiBFbCBkaXNlw7FvIGRlIHByb3B1ZXN0YXMgZGlkw6FjdGljYXMgZW4gZXN0ZSBzZW50aWRvLCBlcyB1biBlamVyY2ljaW8gcXVlIG5vIHNvbG8gZXhpZ2UgY3JlYXRpdmlkYWQgeSBjb25vY2ltaWVudG8gcGVkYWfDs2dpY28sIHNpbm8gdGFtYmnDqW4gdW5hIHByb2Z1bmRhIHJlZmxleGnDs24gc29icmUgbGFzIG5lY2VzaWRhZGVzIHkgcG90ZW5jaWFsaWRhZGVzIGRlIGxvcyBuacOxb3MgZW4gbGEgcHJpbWVyYSBpbmZhbmNpYS4iKV0pLF92bS5fbSgxKSxfdm0uX20oMiksX3ZtLl9tKDMpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aCBiZy1jb2xvci00In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicHgtNCBweC1tZC01IHBiLW1kLTMifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTggbWItMyBtYi1sZy0wIG9yZGVyLWxnLTIifSxbX2MoJ1NseWRlckYnLHthdHRyczp7ImNvbHVtbmFzIjoiY29sLTEyIGNvbC1sZy02In19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIHAtNCBoLTEwMCBzaGFkb3ctYXBwIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byBtYi0zIixzdGF0aWNTdHlsZTp7Im1heC13aWR0aCI6IjkwcHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvNi5zdmciKSwiYWx0IjoiQXZhdGFyVG9wIn19KSxfYygnaDQnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIgbWItNCJ9LFtfdm0uX3YoIkNvaGVyZW5jaWEiKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiTGEgcGxhbmVhY2nDs24gZGViZSBlc3RhciBhbGluZWFkYSBjb24gbG9zIG9iamV0aXZvcyBkZSBhcHJlbmRpemFqZSwgbGFzIG5lY2VzaWRhZGVzIGRlIGxvcyBlc3R1ZGlhbnRlcyB5IGxhcyBlc3RyYXRlZ2lhcyBtZXRvZG9sw7NnaWNhcy4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci13aGl0ZSBwLTQgaC0xMDAgc2hhZG93LWFwcCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8gbWItMyIsc3RhdGljU3R5bGU6eyJtYXgtd2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzcuc3ZnIiksImFsdCI6IkF2YXRhclRvcCJ9fSksX2MoJ2g0Jyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIG1iLTQifSxbX3ZtLl92KCJGbGV4aWJpbGlkYWQiKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiU2kgYmllbiBsYSBwbGFuaWZpY2FjacOzbiBicmluZGEgZXN0cnVjdHVyYSwgdGFtYmnDqW4gZGViZSBwZXJtaXRpciBhanVzdGVzLCBzZWfDum4gZWwgY29udGV4dG8geSBsYXMgcmVzcHVlc3RhcyBkZSBsb3MgbmnDsW9zLiIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIHAtNCBoLTEwMCBzaGFkb3ctYXBwIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byBtYi0zIixzdGF0aWNTdHlsZTp7Im1heC13aWR0aCI6IjkwcHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvNy5zdmciKSwiYWx0IjoiQXZhdGFyVG9wIn19KSxfYygnaDQnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIgbWItNCJ9LFtfdm0uX3YoIlBlcnRpbmVuY2lhIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIkRlYmUgcmVzcG9uZGVyIGEgbGFzIGNhcmFjdGVyw61zdGljYXMgZGVsIGdydXBvLCByZXNwZXRhbmRvIHN1IHJpdG1vIGRlIGFwcmVuZGl6YWplLCBzdXMgaW50ZXJlc2VzIHkgc3VzIHBhcnRpY3VsYXJpZGFkZXMuIildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3Itd2hpdGUgcC00IGgtMTAwIHNoYWRvdy1hcHAifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJteC1hdXRvIG1iLTMiLHN0YXRpY1N0eWxlOnsibWF4LXdpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS85LnN2ZyIpLCJhbHQiOiJBdmF0YXJUb3AifX0pLF9jKCdoNCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciBtYi00In0sW192bS5fdigiSW5jbHVzacOzbiIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIifSxbX3ZtLl92KCJFcyBmdW5kYW1lbnRhbCBxdWUgY29udGVtcGxlIGVzdHJhdGVnaWFzIHBhcmEgYXRlbmRlciBsYSBkaXZlcnNpZGFkIGVuIGVsIGF1bGEsIHByb21vdmllbmRvIGVsIHJlc3BldG8gcG9yIGxhcyBkaWZlcmVuY2lhcy4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci13aGl0ZSBwLTQgaC0xMDAgc2hhZG93LWFwcCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8gbWItMyIsc3RhdGljU3R5bGU6eyJtYXgtd2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzEwLnN2ZyIpLCJhbHQiOiJBdmF0YXJUb3AifX0pLF9jKCdoNCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciBtYi00In0sW192bS5fdigiRXZhbHVhYmlsaWRhZCIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIifSxbX3ZtLl92KCJEZWJlIGluY2x1aXIgbWVjYW5pc21vcyBwYXJhIHZhbG9yYXIgZWwgcHJvY2VzbyBkZSBlbnNlw7FhbnphIHkgYXByZW5kaXphamUsIGdhcmFudGl6YW5kbyBxdWUgbGFzIGVzdHJhdGVnaWFzIGltcGxlbWVudGFkYXMgc2VhbiBlZmVjdGl2YXMuIildKV0pXSldLDEpLF92bS5fbSg0KV0pLF92bS5fbSg1KV0pXSksX3ZtLl9tKDYpLF92bS5fbSg3KSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBhbGlnbi1pdGVtcy1zdGFydCBtYi01In0sW192bS5fbSg4KSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04In0sW19jKCdBY29yZGlvbkEnLHthdHRyczp7InRpcG8iOiJiIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJPYmpldGl2b3MgZGUgYXByZW5kaXphamU6IMK/UXXDqSBzZSBlc3BlcmEgbG9ncmFyPyJ9fSxbX2MoJ3AnLFtfdm0uX3YoIlRvZG8gcHJvY2VzbyBkZSBlbnNlw7FhbnphLWFwcmVuZGl6YWplIGRlYmUgcGFydGlyIGRlIHVuYSBpbnRlbmNpw7NuIGNsYXJhIHF1ZSBvcmllbnRlIGVsIGRlc2Fycm9sbG8gZGUgbGFzIGFjdGl2aWRhZGVzIHBlZGFnw7NnaWNhcy4gRW4gZXN0ZSBzZW50aWRvLCBsb3Mgb2JqZXRpdm9zIGRlIGFwcmVuZGl6YWplIGNvbnN0aXR1eWVuIGxhIGJhc2UgZGUgbGEgcGxhbmlmaWNhY2nDs24sIHB1ZXMgZXN0YWJsZWNlbiBsYXMgaGFiaWxpZGFkZXMsIGNvbm9jaW1pZW50b3MgeSBhY3RpdHVkZXMgcXVlIGxvcyBuacOxb3MgZGViZW4gYWxjYW56YXIgYWwgZmluYWxpemFyIGxhIGV4cGVyaWVuY2lhIGVkdWNhdGl2YS4iKV0pLF9jKCdwJyxbX3ZtLl92KCJFcyBpbXBvcnRhbnRlIHJlZmxleGlvbmFyIHNvYnJlIGPDs21vIGxvcyBvYmpldGl2b3MgZGUgYXByZW5kaXphamUgc2UgdmVuIHJlZmxlamFkb3MgZW4gbGEgcHLDoWN0aWNhIGRlbCBhdWxhLiDCv0VsIGRvY2VudGUgdGl0dWxhciBlc3RhYmxlY2Ugb2JqZXRpdm9zIGNsYXJvcyBlbiBzdSBwbGFuZWFjacOzbj8gwr9Dw7NtbyBsb3MgY29tdW5pY2EgYSBsb3MgbmnDsW9zPyBBZGVtw6FzLCBzZSBkZWJlIGNvbnNpZGVyYXIgbGEgZGl2ZXJzaWRhZCBlbiBlbCBhdWxhOiDCv0PDs21vIHNlIHB1ZWRlbiBmb3JtdWxhciBvYmpldGl2b3MgcXVlIGluY2x1eWFuIGEgbmnDsW9zIGNvbiBuZWNlc2lkYWRlcyBlZHVjYXRpdmFzIGVzcGVjaWFsZXMgbyBjb24gZGlmaWN1bHRhZGVzIGRlIGFwcmVuZGl6YWplPyIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJDb250ZW5pZG9zOiDCv1F1w6kgc2UgZW5zZcOxYXLDoT8ifX0sW19jKCdwJyxbX3ZtLl92KCJMb3MgY29udGVuaWRvcyBjb25zdGl0dXllbiBlbCBjb25qdW50byBkZSBjb25vY2ltaWVudG9zLCBoYWJpbGlkYWRlcyB5IGFjdGl0dWRlcyBxdWUgc2UgZGVzYXJyb2xsYXLDoW4gYSBsbyBsYXJnbyBkZWwgcHJvY2VzbyBkZSBlbnNlw7FhbnphLWFwcmVuZGl6YWplLiBTdSBhZGVjdWFkYSBzZWxlY2Npw7NuIHkgb3JnYW5pemFjacOzbiBwZXJtaXRlbiBlc3RydWN0dXJhciBleHBlcmllbmNpYXMgc2lnbmlmaWNhdGl2YXMgcXVlIHJlc3BvbmRhbiBhIGxhcyBuZWNlc2lkYWRlcyBlIGludGVyZXNlcyBkZSBsb3MgbmnDsW9zLiIpXSksX2MoJ3AnLFtfdm0uX3YoIkVuIGVzdGUgYXNwZWN0bywgZXMgY2xhdmUgYW5hbGl6YXIgbG9zIGNvbnRlbmlkb3MgcXVlIHNlIHRyYWJhamFuIGVuIGVsIGF1bGEgcXVlIG9ic2VydmFuLiDCv0PDs21vIHNlbGVjY2lvbmEgZWwgZG9jZW50ZSBsb3MgY29udGVuaWRvcz8gwr9TZSBhZGFwdGFuIGEgbGEgcmVhbGlkYWQgeSBuZWNlc2lkYWRlcyBkZSBsb3MgbmnDsW9zPyBBZGVtw6FzLCDCv2PDs21vIHNlIGluY29ycG9yYW4gZXN0cmF0ZWdpYXMgcGFyYSBhdGVuZGVyIGEgbmnDsW9zIGNvbiBuZWNlc2lkYWRlcyBlZHVjYXRpdmFzIGVzcGVjaWFsZXMgbyBjb24gZGl2ZXJzaWRhZCBjdWx0dXJhbCB5IGxpbmfDvMOtc3RpY2E/IildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiZGl2IixhdHRyczp7InRpdHVsbyI6IkVzdHJhdGVnaWFzIG1ldG9kb2zDs2dpY2FzOiDCv0PDs21vIHNlIGVuc2XDsWFyw6E/In19LFtfYygncCcsW192bS5fdigiRWwgw6l4aXRvIGRlIHVuYSBwbGFuZWFjacOzbiBkaWTDoWN0aWNhIHJhZGljYSBlbiBsYSBzZWxlY2Npw7NuIHkgYXBsaWNhY2nDs24gZGUgZXN0cmF0ZWdpYXMgcGVkYWfDs2dpY2FzIGFkZWN1YWRhcy4gTGFzIG1ldG9kb2xvZ8OtYXMgZW1wbGVhZGFzIGRlYmVuIGNhcHRhciBlbCBpbnRlcsOpcyBkZSBsb3MgbmnDsW9zIHkgZmF2b3JlY2VyIHN1IGRlc2Fycm9sbG8gaW50ZWdyYWwgYSB0cmF2w6lzIGRlIGV4cGVyaWVuY2lhcyBzaWduaWZpY2F0aXZhcy4iKV0pLF9jKCdwJyxbX3ZtLl92KCJBcXXDrSwgc2UgcHVlZGUgcmVmbGV4aW9uYXIgc29icmUgbG8gb2JzZXJ2YWRvIGVuIGVsIGF1bGEuIMK/UXXDqSBlc3RyYXRlZ2lhcyB1dGlsaXphIGVsIGRvY2VudGUgdGl0dWxhcj8gwr9Dw7NtbyBzZSBhanVzdGFuIGEgbG9zIGRpZmVyZW50ZXMgZXN0aWxvcyBkZSBhcHJlbmRpemFqZT8gwr9FeGlzdGVuIGVzdHJhdGVnaWFzIGRlIGFwb3lvIHBhcmEgbmnDsW9zIGNvbiBuZWNlc2lkYWRlcyBlc3BlY2lhbGVzIG8gZGlmaWN1bHRhZGVzIGRlIGNvbXBvcnRhbWllbnRvPyIpXSksX2MoJ3AnLFtfdm0uX3YoIkFkZW3DoXMsIHNlIGRlYmUgY29uc2lkZXJhciBlbCBjb250ZXh0bzogwr9Dw7NtbyBzZSBkZXNhcnJvbGxhbiBlc3RhcyBlc3RyYXRlZ2lhcyBlbiBhdWxhcyBjb24gYWNjZXNvIGxpbWl0YWRvIGEgdGVjbm9sb2fDrWEgbyBlbiB6b25hcyBydXJhbGVzIGNvbiBwb2NvcyByZWN1cnNvcz8gwr9RdcOpIGFsdGVybmF0aXZhcyBwZWRhZ8OzZ2ljYXMgcG9kcsOtYW4gaW1wbGVtZW50YXJzZSBlbiBlc3RvcyBlc2NlbmFyaW9zPyIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJSZWN1cnNvcyB5IG1hdGVyaWFsZXM6IMK/UXXDqSBzZSBuZWNlc2l0YT8ifX0sW19jKCdwJyxbX3ZtLl92KCJMb3MgcmVjdXJzb3MgZGlkw6FjdGljb3MgZGVzZW1wZcOxYW4gdW4gcGFwZWwgZnVuZGFtZW50YWwgZW4gZWwgcHJvY2VzbyBkZSBlbnNlw7FhbnphLWFwcmVuZGl6YWplLiBFbiBsYSBlZHVjYWNpw7NuIGluZmFudGlsLCBlcyBlc2VuY2lhbCBxdWUgbG9zIG1hdGVyaWFsZXMgdXRpbGl6YWRvcyBzZWFuIHZhcmlhZG9zLCBhY2Nlc2libGVzIHkgYWRlY3VhZG9zIGEgbGEgZWRhZCB5IGVsIGRlc2Fycm9sbG8gZGUgbG9zIHBlcXVlw7Fvcy4iKV0pLF9jKCdwJyxbX3ZtLl92KCJFcyBpbXBvcnRhbnRlIG9ic2VydmFyIHkgYW5hbGl6YXI6IMK/UXXDqSByZWN1cnNvcyB1dGlsaXphIGVsIGRvY2VudGU/IMK/Q8OzbW8gc2UgYWRhcHRhbiBhIGxvcyBuacOxb3MgY29uIG5lY2VzaWRhZGVzIGVzcGVjaWFsZXM/IMK/UXXDqSBlc3RyYXRlZ2lhcyBpbXBsZW1lbnRhIGVsIGRvY2VudGUgc2kgbm8gY3VlbnRhIGNvbiBoZXJyYW1pZW50YXMgdGVjbm9sw7NnaWNhcyBvIHNpIHRyYWJhamEgZW4gdW4gY29udGV4dG8gY29uIGFjY2VzbyBsaW1pdGFkbyBhIG1hdGVyaWFsZXMgZGlkw6FjdGljb3M/IildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiZGl2IixhdHRyczp7InRpdHVsbyI6IkV2YWx1YWNpw7NuOiDCv0PDs21vIHNlIHZhbG9yYXLDoSBlbCBhcHJlbmRpemFqZT8ifX0sW19jKCdwJyxbX3ZtLl92KCJMYSBldmFsdWFjacOzbiBlbiBsYSBlZHVjYWNpw7NuIGluZmFudGlsLCBkZWJlIGNvbmNlYmlyc2UgY29tbyB1biBwcm9jZXNvIGNvbnRpbnVvIGRlIHNlZ3VpbWllbnRvIHkgcmV0cm9hbGltZW50YWNpw7NuLiBTdSBwcm9ww7NzaXRvIHByaW5jaXBhbCBlcyBjb21wcmVuZGVyIGVsIHByb2dyZXNvIGRlIGxvcyBuacOxb3MsIGlkZW50aWZpY2FuZG8gc3VzIGF2YW5jZXMsIG5lY2VzaWRhZGVzIHkgcG90ZW5jaWFsaWRhZGVzIGRlbnRybyBkZWwgcHJvY2VzbyBkZSBhcHJlbmRpemFqZS4iKV0pLF9jKCdwJyxbX3ZtLl92KCJFcyBmdW5kYW1lbnRhbCByZWZsZXhpb25hciBzb2JyZSBlbCBwcm9jZXNvIGRlIGV2YWx1YWNpw7NuIHF1ZSBvYnNlcnZhbiBlbiBlbCBhdWxhOiDCv0PDs21vIGV2YWzDumEgZWwgZG9jZW50ZSBlbCBhcHJlbmRpemFqZT8gwr9TZSBjb25zaWRlcmFuIGVzdHJhdGVnaWFzIGluY2x1c2l2YXMgcGFyYSBuacOxb3MgY29uIG5lY2VzaWRhZGVzIGVzcGVjaWFsZXM/IMK/Q8OzbW8gc2UgcmVhbGl6YSBsYSBldmFsdWFjacOzbiBlbiBjb250ZXh0b3MgcnVyYWxlcyBvIGVuIGF1bGFzIHNpbiBhY2Nlc28gYSByZWN1cnNvcyB0ZWNub2zDs2dpY29zPyIpXSldKV0pXSwxKV0pLF92bS5fbSg5KSxfdm0uX20oMTApLF92bS5fbSgxMSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCJ9LFtfdm0uX3YoIkxhIHBsYW5pZmljYWNpw7NuIGVuIGxhIGVkdWNhY2nDs24gaW5mYW50aWwgZXMgdW4gcGlsYXIgZnVuZGFtZW50YWwgcGFyYSBnYXJhbnRpemFyIGV4cGVyaWVuY2lhcyBkZSBhcHJlbmRpemFqZSBzaWduaWZpY2F0aXZhcyB5IGFkYXB0YWRhcyBhIGxhcyBuZWNlc2lkYWRlcyBkZWwgZGVzYXJyb2xsbyBpbmZhbnRpbC4iKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aCBiZy1jb2xvci04IG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJweC00IHAtbWQtNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGFsaWduLWl0ZW1zLWNlbnRlciJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03IG1iLTMgbWItbGctMCJ9LFtfYygnaDInLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW192bS5fdigiTGEgaW1wb3J0YW5jaWEgZGUgbGEgcGxhbmVhY2nDs24gZW4gbGEgZWR1Y2FjacOzbiBpbmZhbnRpbCIpXSksX3ZtLl9tKDEyKSxfYygnYScse3N0YXRpY0NsYXNzOiJhbmV4byBtYi00IGJnLXdoaXRlIHctZml0IixhdHRyczp7ImhyZWYiOl92bS5vYnRlbmVyTGluaygnL2Rvd25sb2Fkcy9BbmV4b18xLnBkZicpLCJ0YXJnZXQiOiJfYmxhbmsiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYW5leG9fX2ljb25vIixzdHlsZTooeydiYWNrZ3JvdW5kLWNvbG9yJzogJyNGQ0RGREInfSl9LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXBkZi5zdmciKX19KV0pLF92bS5fbSgxMyldKV0pLF92bS5fbSgxNCldKV0pXSksX3ZtLl9tKDE1KSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi00In0sW192bS5fdigiTGEgcGxhbmVhY2nDs24gZGlkw6FjdGljYSBlbiBsYSBlZHVjYWNpw7NuIGluZmFudGlsIGVzIGNsYXZlIHBhcmEgZGlzZcOxYXIgZXhwZXJpZW5jaWFzIGRlIGFwcmVuZGl6YWplIHNpZ25pZmljYXRpdmFzIHF1ZSByZXNwb25kYW4gYSBsYXMgbmVjZXNpZGFkZXMgZGUgbG9zIG5pw7FvcyBlbiBzdXMgcHJpbWVyYXMgZXRhcGFzIGRlIGRlc2Fycm9sbG8uIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWZ1bGwtd2lkdGggYmctY29sb3ItOCBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicHgtNCBwLW1kLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyBvcmRlci0yIn0sW19jKCdoMicse3N0YXRpY0NsYXNzOiJtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX3ZtLl92KCJFamVtcGxvcyBkZSBwbGFuZWFjaW9uZXMgZGlkw6FjdGljYXMgcGFyYSBwcmVqYXJkw61uIHkgamFyZMOtbiIpXSksX3ZtLl9tKDE2KSxfYygnYScse3N0YXRpY0NsYXNzOiJhbmV4byBtYi00IGJnLXdoaXRlIHctZml0IixhdHRyczp7ImhyZWYiOl92bS5vYnRlbmVyTGluaygnL2Rvd25sb2Fkcy9BbmV4b18yLnBkZicpLCJ0YXJnZXQiOiJfYmxhbmsiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYW5leG9fX2ljb25vIixzdHlsZTooeydiYWNrZ3JvdW5kLWNvbG9yJzogJyNGQ0RGREInfSl9LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXBkZi5zdmciKX19KV0pLF92bS5fbSgxNyldKV0pLF92bS5fbSgxOCldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoIGJvcmRlci10b3AgY29sb3ItcHJpbWFyaW8ifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJwLTQgcC1tZC01In0sW19jKCdoMicse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiTUFURVJJQUwgQ09NUExFTUVOVEFSSU8iKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1hdGVyaWFsLWNvbXBsZW1lbnRhcmlvIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLTEyIGNvbC1tZC02IGNvbC1sZy03In0sW19jKCdwJyxbX3ZtLl92KCJMb3MgaW52aXRhbW9zIGEgZXhwbG9yYXIgZWwgbWF0ZXJpYWwgY29tcGxlbWVudGFyaW8gZGUgZXN0ZSBjdXJzbywgZW4gZXN0YSBzZWNjacOzbiBlbmNvbnRyYXLDoSByZWN1cnNvcyBxdWUgbGUgcGVybWl0aXLDoW4gcHJvZnVuZGl6YXIgeSBlbnJpcXVlY2VyIHN1IGFwcmVuZGl6YWplIGVuIGxvcyB0ZW1hcyB0cmF0YWRvcyBlbiBlc3RhIHVuaWRhZC4iKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmciKX19KSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHA6Ly9yaXhwbG9yYS51cG4ubXgvanNwdWkvaGFuZGxlL1JJVVBOLzE2MTkwMyAiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIkNhc3RpbGxvLCBBLiBSLiAoMjAwNykuIEltcG9ydGFuY2lhIGRlIGxhIHBsYW5lYWNpw7NuIGRpZMOhY3RpY2EgZW4gcHJlZXNjb2xhci4gIildKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmciKX19KSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vcmVwb3NpdG9yaW8uaWJlcm9wdWVibGEubXgvaGFuZGxlLzIwLjUwMC4xMTc3Ny8yMTEzIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJQYXJlZGVzIFBpbnRsZSwgQS4gTi4gKDIwMTYpLiBQbGFuZWFjacOzbiBkaWTDoWN0aWNhIHBhcmEgZGVzYXJyb2xsYXIgY29tcGV0ZW5jaWFzIGVuIGxvcyBuacOxb3MgZGUgZ3J1cG9zIG11bHRpZ3JhZG8gZW4gbml2ZWwgcHJlZXNjb2xhci4gIildKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmciKX19KSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vZWxpYnJvLm5ldC9lcy9sYy90ZWNub2xvZ2ljYWRlbG9yaWVudGUvdGl0dWxvcy8xMTQyMjcgIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJaYXJ6YXIgQ2hhcnVyLCBDLiAoMjAxNSkuIFBsYW5lYWNpw7NuIGRpZMOhY3RpY2EgcG9yIGNvbXBldGVuY2lhczogKCBlZC4pLiBHcnVwbyBFZGl0b3JpYWwgUGF0cmlhLiAiKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9lbGlicm8ubmV0L2VzL2xjL3RlY25vbG9naWNhZGVsb3JpZW50ZS90aXR1bG9zLzY3MTE0ICIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiUGl0bHVrLCBMLiAoMjAxNikuIExhcyBTZWN1ZW5jaWFzIGRpZMOhY3RpY2FzIGVuIGVsIEphcmTDrW4gZGUgSW5mYW50ZXM6IGFwb3J0ZXMgZGUgbGFzIMOhcmVhcyBvIGNhbXBvcyBkZWwgY29ub2NpbWllbnRvIGEgbGFzIHVuaWRhZGVzIGRpZMOhY3RpY2FzIHkgbG9zIHByb3llY3RvczogKCBlZC4pLiBIb21vIFNhcGllbnMgRWRpY2lvbmVzLiAiKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdHlsZTooeydtYXgtd2lkdGgnOicxNnB4J30pLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly93d3cuZWRpdG9yaWFsbWQuY29tL2Jsb2cvcGxhbmVhY2lvbi1kaWRhY3RpY2E/c3JzbHRpZD1BZm1CT29va0dDWkxOZG5rRFZSRjBDU2E2TE1hRkNDNnFGWEdyVDFkWWZ1Q2s1X2NQMUcwWTk2ZiAiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIlBsYW5lYWNpw7NuIERpZMOhY3RpY2E6IExhIEd1w61hIERlZmluaXRpdmEuIChzLmYuLWIpLiBFZGl0b3JpYWwgTUQuICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXl0LnN2ZyIpfX0pLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1FVi1Va3VzUUNyQSAiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIlJhbmNobyBNb250ZXJvLCBjYXByaW5vcyBib2VyIHkgYm9ycmVnb3MgZG9ycGVyLiAoMjAxMiwgMjYgZGUganVsaW8pLiBFbGVtZW50b3MgZGUgdW5hIFBsYW5lYWNpw7NuIHkgYXZhbmNlIGVuIEVkdWNhY2nDs24gUHJlZXNjb2xhciwgUHJpbWFyaWEgeSBTZWN1bmRhcmlhLiBbVmlkZW9dLiBZb3VUdWJlLiAiKV0pXSldKSxfdm0uX20oMTkpXSldKV0pXSldLDEpfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW2Z1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy00IG9yZGVyLTIifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMS5wbmciKSwiZGF0YS1hb3MiOiJ6b29tLWluIn19KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctOCBvcmRlci0xIG1iLTMgbWItbGctMCJ9LFtfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRW4gZWwgY29udGV4dG8gZGUgbGEgUHLDoWN0aWNhIHBlZGFnw7NnaWNhIElJLCBsYSBwbGFuaWZpY2FjacOzbiBkaWTDoWN0aWNhIHNlIGNvbnZpZXJ0ZSBlbiBlbCBwaWxhciBlc2VuY2lhbCBxdWUgZ3XDrWEgbGEgZXhwZXJpZW5jaWEgZWR1Y2F0aXZhIGVuIGxvcyBuaXZlbGVzIGRlIHByZWphcmTDrW4geSBqYXJkw61uLiBBIHRyYXbDqXMgZGUgdW5hIHBsYW5pZmljYWNpw7NuIGVzdHJ1Y3R1cmFkYSB5IGJpZW4gcGVuc2FkYSwgbG9zIGZ1dHVyb3MgbGljZW5jaWFkb3MgZW4gRWR1Y2FjacOzbiBJbmZhbnRpbCwgcHVlZGVuIGNyZWFyIGV4cGVyaWVuY2lhcyBzaWduaWZpY2F0aXZhcyBxdWUgZmF2b3JlemNhbiBlbCBkZXNhcnJvbGxvIGludGVncmFsIGRlIGxvcyBuacOxb3MgeSBsYXMgbmnDsWFzLCB0YW50byBlbiBzdXMgY29tcGV0ZW5jaWFzIGNvZ25pdGl2YXMsIGNvbW8gZW4gc3VzIGhhYmlsaWRhZGVzIHNvY2lhbGVzIHkgZW1vY2lvbmFsZXMuIildKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiTGEgaW1wb3J0YW5jaWEgZGUgbGFzIHBsYW5lYWNpb25lcyBkaWTDoWN0aWNhcyByYWRpY2EgZW4gc3UgY2FwYWNpZGFkIHBhcmEgb3JpZW50YXIgbGEgYWNjacOzbiBwZWRhZ8OzZ2ljYSwgZmFjaWxpdGFuZG8gZWwgbG9ncm8gZGUgbG9zIG9iamV0aXZvcyBlZHVjYXRpdm9zIGVzdGFibGVjaWRvcy4gRXN0YXMgcGxhbmVhY2lvbmVzIHBlcm1pdGVuIGludGVncmFyIGVzdHJhdGVnaWFzIGlubm92YWRvcmFzIHF1ZSBwcm9tdWV2ZW4gdW4gYXByZW5kaXphamUgYWN0aXZvLCBsw7pkaWNvIHkgY2VudHJhZG8gZW4gZWwgbmnDsW8sIGFkZW3DoXMgZGUgb2ZyZWNlciB1biBlc3BhY2lvIGRlIHJlZmxleGnDs24gY29udGludWEgcGFyYSBtZWpvcmFyIGxhIHByw6FjdGljYS4iKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItNSBwLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW19jKCdwJyxbX3ZtLl92KCJFbiBlc3RlIHRlbWEsIGxvcyBlc3R1ZGlhbnRlcyBhcHJlbmRlcsOhbiBhIGRpc2XDsWFyIHBsYW5lYWNpb25lcyBkaWTDoWN0aWNhcyBkZSBtYW5lcmEgZXN0cmF0w6lnaWNhLCB1dGlsaXphbmRvIGVuZm9xdWVzIHBlZGFnw7NnaWNvcyBpbm5vdmFkb3JlcyB5IGFwcm92ZWNoYW5kbyBsYXMgVGVjbm9sb2fDrWFzIGRlIGxhIEluZm9ybWFjacOzbiB5IGxhIENvbXVuaWNhY2nDs24gKFRJQyksIGNvbW8gaGVycmFtaWVudGFzIHBhcmEgZW5yaXF1ZWNlciBlbCBwcm9jZXNvIGRlIGVuc2XDsWFuemEtYXByZW5kaXphamUuIildKSxfYygncCcsW192bS5fdigiTGEgaW5jb3Jwb3JhY2nDs24gZGUgbGFzIFRJQywgZW4gcGFydGljdWxhciwgcGVybWl0ZSBwZXJzb25hbGl6YXIgZWwgYXByZW5kaXphamUgeSBjcmVhciBlbnRvcm5vcyBkZSBhcHJlbmRpemFqZSBpbnRlcmFjdGl2b3MgcXVlIGVzdGltdWxhbiBsYSBjcmVhdGl2aWRhZCB5IGVsIHBlbnNhbWllbnRvIGNyw610aWNvIGRlIGxvcyBlc3R1ZGlhbnRlcy4iKV0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLXNlZ3VuZG8iLGF0dHJzOnsiaWQiOiJ0XzFfMSIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2gyJyxbX2MoJ3NwYW4nLFtfdm0uX3YoIjEuMSIpXSksX3ZtLl92KCIgUGxhbmVhY2lvbmVzIGRpZMOhY3RpY2FzOiBlbCBhcnRlIGRlIG9yZ2FuaXphciBlbCBhcHJlbmRpemFqZSIpXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgbWItMyBtYi1sZy0wIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzIucG5nIiksImRhdGEtYW9zIjoiem9vbS1pbiJ9fSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTgifSxbX2MoJ3AnLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkEgcGFydGlyIGRlIGxhIGV4cGVyaWVuY2lhIGVuIGVsIGF1bGEsIHN1cmdlIGxhIHByZWd1bnRhOiDCv3F1w6kgZWxlbWVudG9zIG9ic2VydmFkb3MgZW4gbGEgcHLDoWN0aWNhIHBlZGFnw7NnaWNhIGNvbnRyaWJ1eWVuIHBhcmEgcXVlIHVuYSBjbGFzZSBzZWEgdmVyZGFkZXJhbWVudGUgc2lnbmlmaWNhdGl2YSBwYXJhIGxvcyBuacOxb3MgeSBsYXMgbmnDsWFzPyBObyBzZSB0cmF0YSBzb2xvIGRlIGxvcyBtYXRlcmlhbGVzIHV0aWxpemFkb3MgbyBkZSBsYXMgYWN0aXZpZGFkZXMgcHJvcHVlc3Rhcywgc2lubyBkZSBsYSBlc3RydWN0dXJhIHkgZWwgcHJvcMOzc2l0byBxdWUgbGFzIHN1c3RlbnRhbi4gIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLTEgcC00IG1iLTMiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGFsaWduLWl0ZW1zLXN0YXJ0In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLWF1dG8ifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJteC1hdXRvIixzdGF0aWNTdHlsZTp7Im1heC13aWR0aCI6IjkwcHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMy5zdmciKX19KV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX3ZtLl92KCJFbiBlc3RlIHNlbnRpZG8sIGxhIHBsYW5lYWNpw7NuIGRpZMOhY3RpY2EganVlZ2EgdW4gcGFwZWwgZnVuZGFtZW50YWwsIHB1ZXN0byBxdWUgcGVybWl0ZSBvcmdhbml6YXIgeSBvcmllbnRhciBlbCBwcm9jZXNvIGRlIGFwcmVuZGl6YWplIGRlIG1hbmVyYSBlZmVjdGl2YSwgYXNlZ3VyYW5kbyBxdWUgY2FkYSBhY3RpdmlkYWQgdGVuZ2EgdW4gc2VudGlkbyBjbGFybyBkZW50cm8gZGVsIGRlc2Fycm9sbG8gaW50ZWdyYWwgZGUgbG9zIGVzdHVkaWFudGVzLiIpXSldKV0pXSksX2MoJ3AnLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIlNlZ8O6biBHYXJjw61hICgyMDIyKSwgZW4gZWwgY29udGV4dG8gZGUgbGEgZWR1Y2FjacOzbiBpbmZhbnRpbCwgbGEgcGxhbmVhY2nDs24gZGlkw6FjdGljYSB0cmFzY2llbmRlIHN1IGZ1bmNpw7NuIGFkbWluaXN0cmF0aXZhIHBhcmEgY29udmVydGlyc2UgZW4gdW5hIGhlcnJhbWllbnRhIGVzdHJhdMOpZ2ljYSBxdWUgZmFjaWxpdGEgbGEgY3JlYWNpw7NuIGRlIGV4cGVyaWVuY2lhcyBkZSBhcHJlbmRpemFqZSBlbnJpcXVlY2Vkb3JhcyB5IGFkYXB0YWRhcyBhIGxhcyBuZWNlc2lkYWRlcyBkZSBsb3MgbmnDsW9zIGRlIHByZWphcmTDrW4geSBqYXJkw61uLiBVbmEgcGxhbmlmaWNhY2nDs24gYmllbiBlc3RydWN0dXJhZGEgbm8gc29sbyBwZXJtaXRlIGVzdGFibGVjZXIgb2JqZXRpdm9zIGNsYXJvcywgc2lubyB0YW1iacOpbiBhcnRpY3VsYXIgZXN0cmF0ZWdpYXMgbWV0b2RvbMOzZ2ljYXMsIHNlbGVjY2lvbmFyIHJlY3Vyc29zIGFkZWN1YWRvcyB5IGRpc2XDsWFyIGV2YWx1YWNpb25lcyBxdWUgcHJvbXVldmFuIHVuIGFwcmVuZGl6YWplIGludGVncmFsIHkgc2lnbmlmaWNhdGl2by4iKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgb3JkZXItMiJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS80LnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04IG9yZGVyLTEgbWItMyBtYi1sZy0wIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItMiBwLTQgbWItMyIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ3AnLFtfdm0uX3YoIkRlc2RlIHVuYSBwZXJzcGVjdGl2YSBwZWRhZ8OzZ2ljYSwgbGEgcGxhbmVhY2nDs24gZGlkw6FjdGljYSBzZSBkZWZpbmUgY29tbyB1biBwcm9jZXNvIHJlZmxleGl2byB5IHNpc3RlbcOhdGljbywgbWVkaWFudGUgZWwgY3VhbCBzZSBvcmdhbml6YW4gbG9zIGVsZW1lbnRvcyBmdW5kYW1lbnRhbGVzIGRlbCBwcm9jZXNvIGRlIGVuc2XDsWFuemEtYXByZW5kaXphamUuIEVzdGEgcGVybWl0ZSBhbnRpY2lwYXIgZWwgZGVzYXJyb2xsbyBkZSBsYXMgY2xhc2VzLCBlc3RhYmxlY2llbmRvIHF1w6kgc2UgdmEgYSBlbnNlw7FhciwgY8OzbW8gc2UgdmEgYSBlbnNlw7FhciB5IGRlIHF1w6kgbWFuZXJhIHNlIGV2YWx1YXLDoW4gbG9zIGFwcmVuZGl6YWplcyBhbGNhbnphZG9zIChQaXRsdWssIDIwMTIpLiIpXSldKSxfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiUGFyYSBxdWUgdW5hIHBsYW5lYWNpw7NuIGRpZMOhY3RpY2Egc2VhIGVmZWN0aXZhLCBkZWJlIGN1bXBsaXIgY29uIGNpZXJ0YXMgY2FyYWN0ZXLDrXN0aWNhcyBlc2VuY2lhbGVzOiIpXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgb3JkZXItbGctMSJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS81LnBuZyIpLCJhbHQiOiIifX0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgbWItMyBtYi1sZy0wIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzExLnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItNiBwLTQgbWItMyIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ3AnLFtfdm0uX3YoIkFsIGRpc2XDsWFyIHVuYSBwbGFuZWFjacOzbiBkaWTDoWN0aWNhLCBubyBzZSB0cmF0YSBzb2xvIGRlIHNlZ3VpciB1bmEgZXN0cnVjdHVyYSBwcmVlc3RhYmxlY2lkYSBvIGRlIGN1bXBsaXIgY29uIHVuIHJlcXVpc2l0byBhY2Fkw6ltaWNvLiBTZSBlc3TDoSBjb25maWd1cmFuZG8gZWwgY2FtaW5vIHBvciBlbCBjdWFsIGxvcyBuacOxb3MgeSBsYXMgbmnDsWFzIGV4cGxvcmFyw6FuLCBleHBlcmltZW50YXLDoW4geSBjb25zdHJ1aXLDoW4gY29ub2NpbWllbnRvcy4gRXMsIGVuIGVzZW5jaWEsIGVsIGNvcmF6w7NuIGRlIGxhIHByw6FjdGljYSBwZWRhZ8OzZ2ljYS4iKV0pXSksX2MoJ3AnLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkVuIGVzdGUgY29udGV4dG8gdmlydHVhbCwgYWhvcmEgcXVlIGVuIGxhIFVuaWRhZCAxIHNlIHJlYWxpesOzIGVsIHJlY29ub2NpbWllbnRvIGRlbCBjb250ZXh0byBpbnN0aXR1Y2lvbmFsLCBvYnNlcnZhbmRvIGxvcyBkaWZlcmVudGVzIG5pdmVsZXMgZGUgcHJlamFyZMOtbiB5IGphcmTDrW4sIGFzw60gY29tbyBsYSByZXZpc2nDs24gZG9jdW1lbnRhbCBpbnN0aXR1Y2lvbmFsIHkgbGEgbm9ybWF0aXZpZGFkIG5hY2lvbmFsIGxlZ2FsIGRlIGxhIGVkdWNhY2nDs24gaW5pY2lhbCwgZXMgbW9tZW50byBkZSBhcGxpY2FyIGVzZSBjb25vY2ltaWVudG8sIGEgbGEgY3JlYWNpw7NuIGRlIHVuYSBwbGFuZWFjacOzbiBkaWTDoWN0aWNhLiIpXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLXNlZ3VuZG8iLGF0dHJzOnsiaWQiOiJ0XzFfMiIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2gyJyxbX2MoJ3NwYW4nLFtfdm0uX3YoIjEuMiIpXSksX3ZtLl92KCIgRWxlbWVudG9zIGNsYXZlcyBlbiBsYSBlbGFib3JhY2nDs24gZGUgdW5hIHBsYW5lYWNpw7NuIGRpZMOhY3RpY2EiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy00IG9yZGVyLWxnLTIgbWItMyBtYi1sZy0wIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzEyLnBuZyIpLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04IG9yZGVyLWxnLTEifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci04IHAtNCBtYi0zIixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfYygncCcsW192bS5fdigiRGVzcHXDqXMgZGUgY29tcHJlbmRlciBxdcOpIGVzIHVuYSBwbGFuZWFjacOzbiBkaWTDoWN0aWNhIHkgc3UgaW1wb3J0YW5jaWEgZW4gbGEgZWR1Y2FjacOzbiBpbmZhbnRpbCwgZXMgZnVuZGFtZW50YWwgY29ub2NlciBsb3MgZWxlbWVudG9zIHF1ZSBsYSBjb21wb25lbi4gTGEgcGxhbmlmaWNhY2nDs24gbm8gZXMgc29sbyB1bmEgbGlzdGEgZGUgYWN0aXZpZGFkZXM7IGVzIHVuIHByb2Nlc28gZXN0cnVjdHVyYWRvIHF1ZSBndcOtYSBsYSBlbnNlw7FhbnphIHkgZ2FyYW50aXphIHF1ZSBlbCBhcHJlbmRpemFqZSBkZSBsb3MgbmnDsW9zIHkgbGFzIG5pw7FhcyBzZWEgc2lnbmlmaWNhdGl2by4iKV0pXSksX2MoJ3AnLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIlBhcmEgZGlzZcOxYXIgdW5hIHBsYW5lYWNpw7NuIGVmZWN0aXZhIGVuIHByZWphcmTDrW4geSBqYXJkw61uLCBlcyBuZWNlc2FyaW8gY29uc2lkZXJhciBsb3Mgc2lndWllbnRlcyBlbGVtZW50b3MgY2xhdmVzOiIpXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgbWItMyBtYi1sZy0wIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1iLTQgbWItbGctMCIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzEzLnBuZyIpLCJhbHQiOiIifX0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgb3JkZXItbGctMiBtYi0zIG1iLWxnLTAifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMTQucG5nIiksImRhdGEtYW9zIjoiem9vbS1pbiJ9fSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTggb3JkZXItbGctMSJ9LFtfYygncCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRXMgZXNlbmNpYWwsIGNvbW8gZnV0dXJvcyBkb2NlbnRlcywgY29tcHJlbmRlciBxdWUgbGEgcGxhbmVhY2nDs24gZGlkw6FjdGljYSBkZWJlIHNlciBmbGV4aWJsZSB5IGFkYXB0YXJzZSBhIGxhcyBuZWNlc2lkYWRlcyBkZWwgYXVsYS4gRW4gc3Ugb2JzZXJ2YWNpw7NuLCBkZWJlbiBjdWVzdGlvbmFyc2U6IMK/Q8OzbW8gc2UgZXN0w6EgYWJvcmRhbmRvIGxhIGRpdmVyc2lkYWQgZW4gbGEgcGxhbmVhY2nDs24/IMK/U2UgY29udGVtcGxhbiBlc3RyYXRlZ2lhcyBpbmNsdXNpdmFzPyDCv0PDs21vIHB1ZWRlIHVuIGRvY2VudGUgYWRhcHRhciBzdSBwbGFuZWFjacOzbiBlbiBlbnRvcm5vcyBjb24gcG9jYXMgaGVycmFtaWVudGFzIG8gZW4gem9uYXMgcnVyYWxlcz8iKV0pLF9jKCdwJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX3ZtLl92KCJMYSBwbGFuZWFjacOzbiBkaWTDoWN0aWNhIG5vIHNvbG8gb3JnYW5pemEgbGEgZW5zZcOxYW56YSwgc2lubyBxdWUgdGFtYmnDqW4gZGViZSBnYXJhbnRpemFyIHF1ZSB0b2RvcyBsb3MgbmnDsW9zIHkgbGFzIG5pw7FhcyB0ZW5nYW4gb3BvcnR1bmlkYWRlcyBkZSBhcHJlbmRpemFqZSBlcXVpdGF0aXZhcyB5IHNpZ25pZmljYXRpdmFzLiIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci0yIHAtNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ3AnLFtfdm0uX3YoIkxhIHBsYW5lYWNpw7NuIGRpZMOhY3RpY2Egbm8gZXMgc29sbyB1biByZXF1aXNpdG8sIHNpbm8gbGEgYmFzZSBwYXJhIGNvbnN0cnVpciBleHBlcmllbmNpYXMgZWR1Y2F0aXZhcyBzaWduaWZpY2F0aXZhcy4gQ2FkYSBkZWNpc2nDs24gdG9tYWRhIGVuIGxhIHBsYW5pZmljYWNpw7NuLCBpbXBhY3RhcsOhIGRpcmVjdGFtZW50ZSBlbiBlbCBhcHJlbmRpemFqZSBkZSBsb3MgbmnDsW9zLiIpXSldKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy00IG1iLTMgbWItbGctMCJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xNS5wbmciKSwiZGF0YS1hb3MiOiJ6b29tLWluIn19KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctOCJ9LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi01IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkFob3JhLCBjb24gZXN0b3MgZWxlbWVudG9zIGNsYXZlcywgZWwgcmV0byBlcyBkaXNlw7FhciBwbGFuZWFjaW9uZXMgZGluw6FtaWNhcywgaW5ub3ZhZG9yYXMgeSBjZW50cmFkYXMgZW4gZWwgZGVzYXJyb2xsbyBpbmZhbnRpbC4iKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItMSBwLTQiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGFsaWduLWl0ZW1zLXN0YXJ0In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLWF1dG8ifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJteC1hdXRvIixzdGF0aWNTdHlsZTp7Im1heC13aWR0aCI6IjkwcHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMTYuc3ZnIil9fSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZyJ9LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIn0sW192bS5fdigiwr9RdcOpIGVzdHJhdGVnaWFzIHNlIGVzdMOhbiBpbXBsZW1lbnRhbmRvIGVuIGVsIGF1bGEgcGFyYSBoYWNlciBxdWUgZWwgYXByZW5kaXphamUgc2VhIHNpZ25pZmljYXRpdm8geSBkaXZlcnRpZG8/IMK/Q8OzbW8gcmVzcG9uZGVuIGxvcyBuacOxb3MgYSBlc3RhcyBlc3RyYXRlZ2lhcyB5IHF1w6kgYWp1c3RlcyBwb2Ryw61hbiByZWFsaXphcnNlIHBhcmEgbWVqb3JhciBzdSBleHBlcmllbmNpYT8iKV0pXSldKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRpdHVsby1zZWd1bmRvIixhdHRyczp7ImlkIjoidF8xXzMiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdoMicsW19jKCdzcGFuJyxbX3ZtLl92KCIxLjMiKV0pLF92bS5fdigiIExhIGltcG9ydGFuY2lhIGRlIGxhIHBsYW5lYWNpw7NuIGVuIGxhIGVkdWNhY2nDs24gaW5mYW50aWwiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtcmlnaHQifX0sW192bS5fdigiRW4gZWwgUERGICIpLF9jKCdiJyxbX3ZtLl92KCJMYSBpbXBvcnRhbmNpYSBkZSBsYSBwbGFuZWFjacOzbiBlbiBsYSBlZHVjYWNpw7NuIGluZmFudGlsIildKSxfdm0uX3YoIiwgc2UgYW5hbGl6YW4gbG9zIHByaW5jaXBpb3MsIGVzdHJhdGVnaWFzIHkgZW5mb3F1ZXMgcGVkYWfDs2dpY29zIHF1ZSBvcmllbnRhbiBsYSBlbnNlw7FhbnphIGVuIGVzdGEgZXRhcGEuIEEgdHJhdsOpcyBkZSBlc3RlIGVzdHVkaW8sIHNlIGRlc3RhY2FuIGxhIHJlbGV2YW5jaWEgZGVsIERpc2XDsW8gVW5pdmVyc2FsIHBhcmEgZWwgQXByZW5kaXphamUgKERVQSksIGxhIGluY2x1c2nDs24gZGUgbWV0b2RvbG9nw61hcyBhY3RpdmFzIHkgbGEgbmVjZXNpZGFkIGRlIHVuYSBwbGFuaWZpY2FjacOzbiBmbGV4aWJsZSBxdWUgZmF2b3JlemNhIGVsIGRlc2Fycm9sbG8gaW50ZWdyYWwgZGUgbG9zIG5pw7Fvcy4iKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYW5leG9fX3RleHRvIn0sW19jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiQW5leG8uICIpXSksX3ZtLl92KCIgTGEgaW1wb3J0YW5jaWEgZGUgbGEgcGxhbmVhY2nDs24gZW4gbGEgZWR1Y2FjacOzbiBpbmZhbnRpbC4iKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNSJ9LFtfYygnZmlndXJlJyx7YXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4ifX0sW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMTcucG5nIiksImFsdCI6IiJ9fSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLXNlZ3VuZG8iLGF0dHJzOnsiaWQiOiJ0XzFfNCIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2gyJyxbX2MoJ3NwYW4nLFtfdm0uX3YoIjEuNCIpXSksX3ZtLl92KCIgRWplbXBsb3MgZGUgcGxhbmVhY2lvbmVzIGRpZMOhY3RpY2FzIHBhcmEgcHJlamFyZMOtbiB5IGphcmTDrW4iKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtcmlnaHQifX0sW192bS5fdigiRW4gZWwgUERGICIpLF9jKCdiJyxbX3ZtLl92KCJFamVtcGxvcyBkZSBwbGFuZWFjaW9uZXMgZGlkw6FjdGljYXMgcGFyYSBwcmVqYXJkw61uIHkgamFyZMOtbiIpXSksX3ZtLl92KCIsIHNlIHByZXNlbnRhbiBtb2RlbG9zIGVzdHJ1Y3R1cmFkb3MgcXVlIGluY29ycG9yYW4gZXN0cmF0ZWdpYXMgaW5jbHVzaXZhcywgYWRhcHRhY2lvbmVzIG1ldG9kb2zDs2dpY2FzIHkgcmVjdXJzb3MgZGlkw6FjdGljb3MgcXVlIGZhdm9yZWNlbiBsYSBleHBsb3JhY2nDs24sIGVsIGp1ZWdvIHkgbGEgaW50ZXJhY2Npw7NuIGNvbiBlbCBlbnRvcm5vLiBBIHRyYXbDqXMgZGUgZXN0b3MgZWplbXBsb3MsIHNlIGFuYWxpemEgY8OzbW8gbGEgcGxhbmlmaWNhY2nDs24gY29udHJpYnV5ZSBhIGxhIGVuc2XDsWFuemEgZWZlY3RpdmEgeSBlcXVpdGF0aXZhLCBhc2VndXJhbmRvIHF1ZSBjYWRhIG5pw7FvIHRlbmdhIGxhIG9wb3J0dW5pZGFkIGRlIHBhcnRpY2lwYXIgYWN0aXZhbWVudGUgZW4gc3UgcHJvY2VzbyBkZSBhcHJlbmRpemFqZS4iKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYW5leG9fX3RleHRvIn0sW19jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiQW5leG8uICIpXSksX3ZtLl92KCIgRWplbXBsb3MgZGUgcGxhbmVhY2lvbmVzIGRpZMOhY3RpY2FzIHBhcmEgcHJlamFyZMOtbiB5IGphcmTDrW4uIildKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTUgb3JkZXItMSBtYi0zIG1iLWxnLTAifSxbX2MoJ2ZpZ3VyZScse2F0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluIn19LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzE4LnBuZyIpLCJhbHQiOiIifX0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC0xMiBjb2wtbWQtNiBjb2wtbGctMyBvZmZzZXQtbGctMSJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9tYXRlcmlhbC1jb21wbGVtZW50YXJpby5zdmciKSwiYWx0IjoiIn19KV0pXSl9XQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}